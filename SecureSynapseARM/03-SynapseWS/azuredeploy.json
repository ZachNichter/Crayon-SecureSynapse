{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dataLakeAccount": {
            "type": "string",
            "defaultValue": "securesynapseadls",
            "metadata": {
                "description": "Account name for built in Synapse data lake"
            }
        },
        "dataLakeAccountType": {
            "type": "string",
            "defaultValue": "filestore",
            "metadata": {
                "description": "Type of data lake"
            }
        },
        "sqlAdminLogin": {
            "type": "string",
            "defaultValue": "sqladminuser",
            "metadata": {
                "description": "Synapse SQL administrator account name"
            }
        },
        "sqlAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            }
        },
        "synapseWSName": {
            "type": "string",
            "defaultValue": "securedSynapseWS",
            "metadata": {
                "description": "Name of the workspace"
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]",
        "devEndpoint": "[concat('https://', parameters('synapseWSName'), '.dev.azuresynapse.net')]",
        "onDemandEndpoint": "[concat(parameters('synapseWSName'), '-ondemand.sql.azuresynapse.net')]",
        "sqlEndpoint": "[concat(parameters('synapseWSName'), '.sql.azuresynapse.net')]"

    },
    "resources": [
        {
            "name": "[parameters('synapseWSName')]",
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-03-01",
            "tags": {},
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[concat('https://',parameters('dataLakeAccount'), '.dfs.core.windows.net')]",
                    "filesystem": "[parameters('dataLakeAccountType')]"
                },
                "sqlAdministratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "managedResourceGroupName": "", //this can be blank or null - autogenerated
                "sqlAdministratorLogin": "[parameters('sqlAdminLogin')]",
                // "virtualNetworkProfile": {
                // "computeSubnetId": "string"     //subnet used for compute in workspace
                // },
                "connectivityEndpoints": {
    //                "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f2ba972e5-d964-4ff6-9b9b-bf89377f4391%2fresourceGroups%2f', parameters('location'),'%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', parameters('synapseWSName'))]",
                    "dev": "[variables('devEndpoint')]",
                    "sqlOnDemand": "[variables('onDemandEndpoint')]",
                    "sql": "[variables('sqlEndpoint')]"
                },
                "managedVirtualNetwork": "default",
    /*             "privateEndpointConnections": [
                    {
                        "properties": {
                            "privateEndpoint": {},
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "string"
                            }
                        }
                    },
                    {
                        "properties": {
                            "privateEndpoint": {},
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "string"
                            }
                        }
                    },
                    {
                        "properties": {
                            "privateEndpoint": {},
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "string"
                            }
                        }
                    }
                ],
            "encryption": {
                    "cmk": {
                        "key": {
                            "name": "string",
                            "keyVaultUrl": "string"
                        }
                    }
                },
    */
                "managedVirtualNetworkSettings": {
                    "preventDataExfiltration": "false",
                    // "linkedAccessCheckOnTargetResource": "boolean",
                    "allowedAadTenantIdsForLinking": [
                    ]
                } /*,
                "workspaceRepositoryConfiguration": {   //Git integration settings
                    "type": "string",
                    "hostName": "string",
                    "accountName": "string",
                    "projectName": "string",
                    "repositoryName": "string",
                    "collaborationBranch": "string",
                    "rootFolder": "string",
                    "lastCommitId": "string",
                    "tenantId": "string"
                },
                "purviewConfiguration": {
                    "purviewResourceId": "string"
                }, 
                "networkSettings": {        //public network access
                    "publicNetworkAccess": "disabled"
                }
                */
            }
        }
    ],
    "outputs": {
        "resourceGroupName": {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "resourceGroupLocation": {
            "type": "string",
            "value": "[variables('location')]"
        },
        "synapseWorkspaceName": {
            "type": "string",
            "value": "[parameters('synapseWSName')]"
        },
        "devEndpoint": {
            "type": "string",
            "value": "[variables('devEndpoint')]"
        },
        "indemandEndpoint": {
            "type": "string",
            "value": "[variables('ondemandEndpoint')]"
        },
        "sqlEndpoint": {
            "type": "string",
            "value": "[variables('sqlEndpoint')]"
        }
    }
}